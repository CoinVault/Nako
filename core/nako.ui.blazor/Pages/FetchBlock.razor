@page "/fetchblock"
@page "/fetchblock/{blockindex:long}"
@page "/fetchblock/{blockhash}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject GlobalData globalData

@if (block == null)
{
    <section class="block-explorer-section section bg-bottom">
        <div class="container">
            <div class="row">
                <div style="margin:0 auto; min-height: 500px">
                    <div class="spinner-grow" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
else
{
    <section class="block-explorer-section section bg-bottom">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="center-heading">
                        <h2 class="section-title">Details for Block @block.BlockIndex</h2>
                    </div>
                </div>
                <div class="offset-lg-3 col-lg-6">
                    <div class="center-text">
                        <p>Additional information about a block.</p>
                    </div>
                </div>
            </div>
            <div class="row m-bottom-70">
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table class="table table-striped table-latests table-detail">
                            <tbody>
                                <tr><td><strong>Block Height</strong></td><td>@block.BlockIndex</td></tr>
                                <tr><td><strong>Hash</strong></td><td>@block.BlockHash</td></tr>
                                <tr><td><strong>Next Block</strong></td><td class="mousepointer" @onclick="@(() => UpdateBlockHash(block.NextBlockHash))">@block.NextBlockHash</td></tr>
                                <tr><td><strong>Previous Block</strong></td><td class="mousepointer" @onclick="@(() => UpdateBlockHash(block.PreviousBlockHash))">@block.PreviousBlockHash</td></tr>
                                <tr><td><strong>No. Transactions</strong></td><td>@block.TransactionCount</td></tr>
                                <tr><td><strong>Block Time</strong></td><td>@GlobalData.UnixTimeToDateTime((ulong)block.BlockTime).ToString("dd/MM/yyyy HH:mm")</td></tr>
                                <tr><td><strong>Version</strong></td><td>@block.Version</td></tr>
                                <tr><td><strong>Merkleroot</strong></td><td>@block.Merkleroot</td></tr>
                                <tr><td><strong>Nonce</strong></td><td>@block.Nonce</td></tr>
                                <tr><td><strong>ChainWork</strong></td><td>@block.ChainWork</td></tr>
                                <tr><td><strong>Difficulty</strong></td><td>@block.Difficulty</td></tr>
                                <tr><td><strong>Size</strong></td><td>@block.BlockSize KB</td></tr>
                                @if (!string.IsNullOrEmpty(@block.PosModifierv2))
                                {
                                    <tr><td>Confirmations</td><td>@block.Confirmations</td></tr>
                                    <tr><td>PosModifierv2</td><td>@block.PosModifierv2</td></tr>
                                    <tr><td>PosChainTrust</td><td>@block.PosChainTrust</td></tr>
                                    <tr><td>PosBlockTrust</td><td>@block.PosBlockTrust</td></tr>
                                    <tr><td>PosFlags</td><td>@block.PosFlags</td></tr>
                                    <tr><td colspan="2">Block Signature: <br/><small class="multiline-text"> @block.PosBlockSignature</small></td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="center-heading">
                        <h2 class="section-title">Transactions</h2>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table class="table table-striped table-latests">
                            <thead>
                                <tr>
                                    <th>Transaction Hash</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in block.Transactions)
                                {
                                    <tr>
                                        <td class="mousepointer" @onclick="@(() => NavigateToTransactionkIndex(transaction))">@transaction</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@code {

    [Parameter]
    public long? blockindex { get; set; }

    [Parameter]
    public string blockhash { get; set; }

    private DataTypes.QueryBlock block;

    private void NavigateToTransactionkIndex(string trxHash)
    {
        NavigationManager.NavigateTo($"fetchtransaction/{trxHash}");
    }

    private async Task UpdateBlockHash(string hash)
    {
        block = null;

        block = await Http.GetJsonAsync<DataTypes.QueryBlock>($"http://{this.globalData.ApiUrl}/api/Query/block/{hash}/1?api-version=1.0");
    }

    protected override async Task OnInitializedAsync()
    {
        if (this.blockindex == null)
        {
            Console.WriteLine($"fetchblock/lastblock");

            block = await Http.GetJsonAsync<DataTypes.QueryBlock>($"http://{this.globalData.ApiUrl}/api/Query/block/Latest/1?api-version=1.0");
            return;
        }

        if (!string.IsNullOrEmpty(this.blockhash))
        {
            Console.WriteLine($"fetchblock/{this.blockhash}");

            block = await Http.GetJsonAsync<DataTypes.QueryBlock>($"http://{this.globalData.ApiUrl}/api/Query/block/{this.blockhash}/1?api-version=1.0");
            return;
        }

        if (!this.globalData.BlocksCache.TryGetValue(this.blockindex.Value, out block))
        {
            Console.WriteLine($"fetchblock/{this.blockindex}");

            block = await Http.GetJsonAsync<DataTypes.QueryBlock>($"http://{this.globalData.ApiUrl}/api/Query/block/Index/{this.blockindex}/1?api-version=1.0");
        }
    }
}
